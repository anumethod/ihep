// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type PageRoutes = "/About" | "/Appointments" | "/AuditLogs" | "/Community" | "/ComplianceDashboard" | "/Contact" | "/Dashboard" | "/DigitalTwin" | "/Education" | "/Events" | "/Forum" | "/ForumCategory" | "/ForumPost" | "/HealthAIAssistant" | "/Help" | "/MedicationAdherence" | "/MedicationRefill" | "/Messages" | "/NeuralGovernance" | "/NewAppointment" | "/NewEvent" | "/NewForumPost" | "/PhoneVerification" | "/Privacy" | "/Profile" | "/Provider" | "/Resources" | "/Rewards" | "/RiskAssessment" | "/SimpleTwilioForm" | "/StateCompliance" | "/Telehealth" | "/Terms" | "/TwilioConfig" | "/TwilioSettings" | "/WellnessTips" | "/auth/Login" | "/auth/Register" | "/not-found"
type LayoutRoutes = never
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/About": {}
  "/Appointments": {}
  "/AuditLogs": {}
  "/auth/Login": {}
  "/auth/Register": {}
  "/Community": {}
  "/ComplianceDashboard": {}
  "/Contact": {}
  "/Dashboard": {}
  "/DigitalTwin": {}
  "/Education": {}
  "/Events": {}
  "/Forum": {}
  "/ForumCategory": {}
  "/ForumPost": {}
  "/HealthAIAssistant": {}
  "/Help": {}
  "/MedicationAdherence": {}
  "/MedicationRefill": {}
  "/Messages": {}
  "/NeuralGovernance": {}
  "/NewAppointment": {}
  "/NewEvent": {}
  "/NewForumPost": {}
  "/not-found": {}
  "/PhoneVerification": {}
  "/Privacy": {}
  "/Profile": {}
  "/Provider": {}
  "/Resources": {}
  "/Rewards": {}
  "/RiskAssessment": {}
  "/SimpleTwilioForm": {}
  "/StateCompliance": {}
  "/Telehealth": {}
  "/Terms": {}
  "/TwilioConfig": {}
  "/TwilioSettings": {}
  "/WellnessTips": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
